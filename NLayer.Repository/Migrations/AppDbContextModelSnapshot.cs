// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NLayer.Core.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateOfConstruction")
                        .HasColumnType("int");

                    b.Property<string>("MailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStudent")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTeacher")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SchoolType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Schools", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Uluyazi Cankiri/Turkiye",
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(7921),
                            DateOfConstruction = 2007,
                            MailAdress = "caku@caku.com",
                            Name = "Cankiri Karatekin Universitesi",
                            NumberOfStudent = 17000,
                            NumberOfTeacher = 250,
                            PhoneNumber = "1234567890",
                            SchoolType = "Universite"
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Maltepe/Istanbul",
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(7934),
                            DateOfConstruction = 2010,
                            MailAdress = "maltepe@info.com",
                            Name = "Maltepe Universitesi",
                            NumberOfStudent = 7000,
                            NumberOfTeacher = 100,
                            PhoneNumber = "1234567890",
                            SchoolType = "Universitesi"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ClassBranch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParentPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("ParentSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 21,
                            ClassBranch = "Computer Engineer",
                            ClassLevel = 2,
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(8081),
                            DateOfBirth = "17/01/2002",
                            Gender = "E",
                            Name = "Ferhat",
                            ParentName = "Ali",
                            ParentPhoneNumber = "1234567890",
                            ParentSurname = "Cakmakoglu",
                            PhoneNumber = "1234567890",
                            SchoolId = 1,
                            Surname = "Cakmakoglu"
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            ClassBranch = "Computer Engineer",
                            ClassLevel = 2,
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(8084),
                            DateOfBirth = "20/10/2002",
                            Gender = "E",
                            Name = "Sakir",
                            ParentName = "Bilmiyom",
                            ParentPhoneNumber = "1234567890",
                            ParentSurname = "Ayitki",
                            PhoneNumber = "9876541230",
                            SchoolId = 2,
                            Surname = "Ayitki"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 34,
                            Branch = "Computer Since",
                            BranchType = "Lecturer",
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(8192),
                            DateOfBirth = "20/07/1989",
                            Gender = "E",
                            Name = "Selim",
                            PhoneNumber = "1234567890",
                            SchoolId = 1,
                            Surname = "Buyrukoglu"
                        },
                        new
                        {
                            Id = 2,
                            Age = 44,
                            Branch = "Network Since",
                            BranchType = "Professor Lecturer",
                            CreatedTime = new DateTime(2023, 3, 14, 18, 23, 55, 587, DateTimeKind.Local).AddTicks(8194),
                            DateOfBirth = "10/11/1989",
                            Gender = "E",
                            Name = "Kazim",
                            PhoneNumber = "1478523690",
                            SchoolId = 2,
                            Surname = "Nalburoglu"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Student", b =>
                {
                    b.HasOne("NLayer.Core.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("NLayer.Core.Models.Teacher", b =>
                {
                    b.HasOne("NLayer.Core.Models.School", "School")
                        .WithMany("Teachers")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("NLayer.Core.Models.School", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
